// docs/.vuepress/config.ts
import { defineConfig4CustomTheme } from "vuepress/config";

// docs/.vuepress/config/nav.ts
var nav_default = [
  { text: "\u9996\u9875", link: "/" },
  {
    text: "Java",
    link: "/java/",
    items: [
      {
        text: "Java EE",
        link: "/java/"
      },
      {
        text: "\u8BBE\u8BA1\u6A21\u5F0F",
        link: "/deploy/"
      },
      {
        text: "\u66F4\u591A\u53C2\u8003",
        link: "/more/"
      }
    ]
  },
  {
    text: "Linux",
    link: "/linux/",
    items: [
      {
        text: "\u9879\u76EE\u914D\u7F6E",
        link: "/start/"
      },
      {
        text: "\u90E8\u7F72",
        link: "/deploy/"
      },
      {
        text: "\u66F4\u591A\u53C2\u8003",
        link: "/more/"
      }
    ]
  },
  {
    text: "\u4E91\u539F\u751F",
    link: "/cloud-native/",
    items: [
      {
        text: "Docker",
        link: "/pages/1438b6/"
      },
      {
        text: "Kubernetes",
        link: "/pages/01ad38/"
      },
      {
        text: "DevOps GitLab+Jenkins\u7248",
        link: "/pages/f3753d/"
      }
    ]
  },
  {
    text: "\u4E2D\u95F4\u4EF6",
    link: "/middleware/",
    items: [
      {
        text: "Elasticsearch",
        link: "/pages/ba1f82/"
      },
      {
        text: "\u90E8\u7F72",
        link: "/deploy/"
      },
      {
        text: "\u66F4\u591A\u53C2\u8003",
        link: "/more/"
      }
    ]
  },
  {
    text: "\u6846\u67B6",
    link: "/framework/",
    items: [
      {
        text: "Spring",
        link: "/start/"
      },
      {
        text: "SpringBoot",
        link: "/deploy/"
      },
      {
        text: "SpringCloud",
        link: "/more/"
      },
      {
        text: "MongoDB",
        link: "/more/"
      }
    ]
  },
  {
    text: "\u6570\u636E\u5E93",
    link: "/database/",
    items: [
      {
        text: "Oracle",
        link: "/pages/bf1d71/"
      },
      {
        text: "Mysql",
        link: "/pages/8d87bf/"
      },
      {
        text: "Redis",
        link: "/pages/5b6cca/"
      },
      {
        text: "MongoDB",
        link: "/pages/2c94a8/"
      }
    ]
  },
  {
    text: "\u7D22\u5F15",
    link: "/archives/",
    items: [
      { text: "\u5206\u7C7B", link: "/categories/" },
      { text: "\u6807\u7B7E", link: "/tags/" },
      { text: "\u5F52\u6863", link: "/archives/" }
    ]
  },
  {
    text: "\u5BFC\u822A",
    link: "/nav/"
  }
];

// docs/.vuepress/config/themeVdoingConfig.ts
var themeVdoingConfig_default = {
  nav: nav_default,
  sidebarDepth: 2,
  logo: "/assets/img/logo.png",
  searchMaxSuggestions: 10,
  lastUpdated: "\u4E0A\u6B21\u66F4\u65B0",
  docsDir: "docs",
  editLinks: true,
  editLinkText: "\u7F16\u8F91",
  category: true,
  tag: true,
  archive: true,
  rightMenuBar: true,
  pageButton: true,
  pageStyle: "line",
  sidebarOpen: true,
  sidebar: { mode: "structuring", collapsable: true },
  updateBar: {
    showToArticle: true,
    moreArticle: "/archives"
  },
  author: {
    name: "KwFruit",
    link: "https://www.cnblogs.com/mangoubiubiu"
  },
  social: {
    icons: [
      {
        iconClass: "icon-bokeyuan",
        title: "\u535A\u5BA2\u56ED",
        link: "https://www.cnblogs.com/mangoubiubiu"
      }
    ]
  },
  footer: {
    createYear: 2023,
    copyrightInfo: `
      <a href='https://www.cnblogs.com/mangoubiubiu' target='_blank'>KwFruit</a> | <a href='https://creativecommons.org/licenses/by-nc-sa/4.0/' rel='external nofollow' target='_blank'>CC BY-NC-SA 4.0</a>
      <br>
    `
  }
};

// docs/.vuepress/config/markdown.ts
var markdown_default = {
  lineNumbers: false,
  plugins: [
    "markdown-it-sub",
    "markdown-it-sup",
    "markdown-it-footnote",
    "markdown-it-task-lists",
    "markdown-it-attrs",
    "markdown-it-imsize",
    "markdown-it-mathjax3",
    "markdown-it-abbr",
    "markdown-it-ins",
    "markdown-it-multimd-table-ext"
  ],
  extendMarkdown: (md) => {
    md.set({ breaks: true });
  },
  extractHeaders: ["h2", "h3", "h4", "h5", "h6"]
};

// docs/.vuepress/config/plugins.ts
import fs from "fs";
import { resolve } from "path";
var plugins_default = [
  [
    "sitemap",
    {
      hostname: `https://${fs.readFileSync(resolve("E:\\vscode_workspace\\knowledge-base-website\\docs\\.vuepress\\config", "../public", "CNAME"))}`
    }
  ],
  [
    "smplayer",
    {
      artplayer: {
        src: {
          playbackRate: true,
          whitelist: ["*"],
          moreVideoAttr: {
            preload: "auto"
          }
        }
      }
    }
  ],
  ["pangu"],
  [
    "one-click-copy",
    {
      copySelector: [
        'div[class*="language-"] pre',
        'div[class*="aside-code"] aside'
      ],
      copyMessage: "\u590D\u5236\u6210\u529F",
      duration: 1e3,
      showInMobile: false
    }
  ],
  [
    "zooming",
    {
      selector: ".theme-vdoing-content img:not(.no-zoom)",
      options: {
        bgColor: "rgba(0,0,0,0.6)"
      }
    }
  ],
  ["fulltext-search"]
];

// docs/.vuepress/config/head.ts
var head_default = [
  ["link", { rel: "icon", href: "/favicon.ico" }],
  [
    "meta",
    {
      name: "viewport",
      content: "width=device-width,initial-scale=0,user-scalable=no"
    }
  ]
];

// docs/.vuepress/config.ts
var config_default = defineConfig4CustomTheme({
  title: "KwFruit",
  description: "KwFruit\u4E2A\u4EBA\u77E5\u8BC6\u5E93",
  dest: "dist",
  shouldPrefetch: () => false,
  head: head_default,
  theme: "vdoing",
  themeConfig: themeVdoingConfig_default,
  markdown: markdown_default,
  plugins: plugins_default
});
export {
  config_default as default
};
//# sourceMappingURL=data:application/json;base64,
